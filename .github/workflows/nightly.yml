name: Nightly
on:
  schedule:
    - cron: '0 0 * * *' # Every day at midnight
  pull_request:
    paths:
      - '.github/workflows/nightly.yml'

# This nightly test helps us to track changes on containerd on daily basis
# and enable us to quickly fix snapshotter when some of recent changes on
# containerd cause incompatibility with this snapshotter.
#
# TODO1(ktock): Output binaries if needed.
# TODO2(ktock): Ideally, this test should be invoked in containerd/containerd's CI on each PR.
#               This will make sure that each commit merged into containerd/containerd safely
#               works with stargz snapshotter.

env:
  DOCKER_BUILDKIT: 1
  # Temporary disable contaienrd main branch test and migrate to containerd v2 after it's released.
  # DOCKER_BUILD_ARGS: --build-arg=CONTAINERD_VERSION=main # do tests with the latest containerd

jobs:
  integration:
    runs-on: ubuntu-22.04
    name: Integration
    steps:
    - name: Install htpasswd for setting up private registry
      run: sudo apt-get update -y && sudo apt-get --no-install-recommends install -y apache2-utils
    - uses: actions/checkout@v4
    - name: Run integration test
      run: make integration

  test-optimize:
    runs-on: ubuntu-22.04
    name: Optimize
    steps:
    - name: Install htpasswd for setting up private registry
      run: sudo apt-get update -y && sudo apt-get --no-install-recommends install -y apache2-utils
    - uses: actions/checkout@v4
    - name: Run test for optimize subcommand of ctr-remote
      run: make test-optimize

  test-kind:
    runs-on: ubuntu-22.04
    name: Kind
    steps:
    - name: Install htpasswd for setting up private registry
      run: sudo apt-get update -y && sudo apt-get --no-install-recommends install -y apache2-utils
    - uses: actions/checkout@v4
    - name: Run test for pulling image from private registry on Kubernetes
      run: make test-kind

  test-criauth:
    runs-on: ubuntu-22.04
    name: CRIAuth
    steps:
    - name: Install htpasswd for setting up private registry
      run: sudo apt-get update -y && sudo apt-get --no-install-recommends install -y apache2-utils
    - uses: actions/checkout@v4
    - name: Run test for pulling image from private registry on Kubernetes
      run: make test-criauth

  test-cri-containerd:
    runs-on: ubuntu-22.04
    name: CRIValidationContainerd
    steps:
    - uses: actions/checkout@v4
    - name: Varidate the runtime through CRI with containerd
      run: make test-cri-containerd

  test-cri-o:
    runs-on: ubuntu-22.04
    name: CRIValidationCRIO
    steps:
    - name: Install the latest docker
      run: |
        sudo apt-get remove moby-cli moby-engine
        wget -O get-docker.sh https://get.docker.com
        sh get-docker.sh
    - uses: actions/checkout@v4
    - name: Varidate the runtime through CRI with CRI-O
      env:
        DOCKER_BUILD_ARGS: "--build-arg=RUNC_VERSION=v1.0.3"
      run: |
        # needed to pass "runtime should output OOMKilled reason" test
        sudo swapoff -a
        make test-cri-o

  test-k3s:
    runs-on: ubuntu-22.04
    name: K3S
    steps:
    - uses: actions/setup-go@v5
      with:
        go-version: '1.23.x'
    - name: Install k3d
      run: |
        wget -q -O - https://raw.githubusercontent.com/rancher/k3d/v5.6.3/install.sh | bash
    - name: Install htpasswd for setting up private registry
      run: sudo apt-get update -y && sudo apt-get --no-install-recommends install -y apache2-utils
    - name: Install yq
      run: |
        sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.9.3/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq
    - uses: actions/checkout@v4
    - name: Run test with k3s
      run: make test-k3s
